steps:
  # Decrypt the secret and write to file
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'decrypt-firebase-secret'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      mkdir -p ./src/middleware
      gcloud secrets versions access latest --secret=FIREBASE_SERVICE_ACCOUNT_JSON > ./src/middleware/service.json

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'prepare-storage-secret'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gcloud secrets versions access latest --secret=STORAGE_SERVICE_ACCOUNT_JSON > ./src/storageService.json
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: [
      'build', 
      '-t', 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA', 
      '.'
    ]

  # Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: [
      'push', 
      'gcr.io/$_PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-cloud-run'
    args: [
      'run', 'deploy', 'cimon-api',
      '--image', 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA',
      '--region', '$_REGION',
      '--platform', '$_PLATFORM',
      '--allow-unauthenticated',
      '--port', '$_PORT',
    ]

# Specify the image to push to Container Registry
images:
  - 'gcr.io/$_PROJECT_ID/$_IMAGE_NAME:$SHORT_SHA'

# Build timeout
timeout: 1200s
options:
  logging: CLOUD_LOGGING_ONLY  